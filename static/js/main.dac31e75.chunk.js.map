{"version":3,"sources":["Loading.tsx","Highlights.tsx","SearchBox.tsx","DataLoader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Loading","progress","undefined","type","value","readOnly","name","min","max","step","Highlights","h","highlights","map","i","arr","substring","length","s","SearchBox","minisearches","useState","criteria","setCriteria","results","setResults","useEffect","flatMap","ms","search","fuzzy","sort","r1","r2","score","slice","searchResult","text","decompress","compressed","match","fuzzyMatch","onChange","e","target","r","href","id","rel","MS_CONFIG","fields","storeFields","concat","range","from","to","push","DataLoader","setMinisearches","setProgress","loading","setLoading","a","totalRequestsSize","requestsTransferredSize","updateProgress","some","x","reduce","b","Promise","all","headers","Headers","append","request","Request","fetch","then","get","reqSize","includes","parseInt","split","fetchProgress","onProgress","transferred","onError","err","console","error","res","blob","size","MiniSearch","loadJSON","App","ready","setReady","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dac31e75.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Loading({ progress }: { progress: number | undefined }) {\n  return (\n    <p>\n      Loading...\n      <br />\n      {progress !== undefined && <input type=\"range\" value={progress * 1000} readOnly name=\"volume\" min=\"0\" max=\"1000\" step=\"1\" />}\n      {progress === undefined && 'unknown length'}\n    </p>\n  )\n}\n\nexport default Loading;\n","import React from 'react'\n\nexport interface HighlightsProps {\n  highlights: string[]\n}\n\nconst CONTEXT_LENGTH = 40\nconst Highlights: React.FunctionComponent<HighlightsProps> = ({ highlights }) => {\n  const h = highlights.map((h, i, arr) => {\n    if (i === 0) {\n      return h.substring(h.length-CONTEXT_LENGTH)\n    }\n    else if (i === arr.length - 1) {\n      return h.substring(0, CONTEXT_LENGTH)\n    } else if (i % 2 === 0) {\n      return h.substring(0, CONTEXT_LENGTH) + '...' + h.substring(h.length-CONTEXT_LENGTH)\n    }\n    return <b>{h}</b>\n  })\n\n  return (\n    <>\n      {h.map((s, i) => (<span key={i}>{s}</span>))}\n    </>\n  )\n}\n\nexport default Highlights\n","import React, { useState, useEffect } from 'react'\nimport MiniSearch, { SearchResult } from 'minisearch'\nimport { decompress } from 'lz-string'\nimport { fuzzyMatch } from 'fuzzbunny'\nimport Highlights from './Highlights'\n\nexport interface SearchBoxProps {\n  minisearches: MiniSearch[]\n}\n\ninterface ExtendedSearchResult {\n  searchResult: SearchResult\n  text: string\n  highlights: string[]\n}\n\nconst SearchBox: React.FunctionComponent<SearchBoxProps> = ({ minisearches }) => {\n  const [criteria, setCriteria] = useState('')\n  const [results, setResults] = useState<ExtendedSearchResult[]>([])\n\n  useEffect(() => {\n    if (criteria.length < 3) {\n      setResults([])\n      return\n    }\n    setResults(minisearches\n        .flatMap((ms) => ms.search(criteria, { fuzzy: 0.2 }))\n        .sort((r1, r2) => - (r1.score - r2.score))\n        .slice(0, 10)\n        .map((searchResult) => {\n          const text = decompress(searchResult.compressed) || ''\n          const match = fuzzyMatch(text, criteria)\n          const highlights = match ? match.highlights: []\n          return {\n            searchResult,\n            text,\n            highlights,\n          }\n        }))\n  }, [criteria, minisearches])\n\n  return (\n    <>\n      <input type=\"text\" value={criteria} onChange={(e) => setCriteria(e.target.value)} />\n      {results.length > 0 && (<table>\n        {results.map((r) => (\n          <tr key={r.searchResult.id}>\n            <td><a href={r.searchResult.id} target=\"_blank\" rel=\"noreferrer\">{r.searchResult['tender/description']}</a></td>\n            <td>{r.searchResult['tender/title']}</td>\n            <td>{r.searchResult['tender/description']}</td>\n            <td><Highlights highlights={r.highlights} /></td>\n          </tr>\n        ))}\n      </table>)}\n    </>\n  )\n}\n\nexport default SearchBox\n","import React, { useState, useEffect } from 'react'\nimport MiniSearch from 'minisearch'\nimport fetchProgress from 'fetch-progress'\n\nimport Loading from './Loading'\nimport SearchBox from './SearchBox'\n\nexport interface DataLoaderProps {\n}\n\n// FIXME: shared with create-index\nconst NUM_MINISEARCH = 10\nconst COLS = [\n  'tender/title',\n  'tender/description',\n  'tender/status',\n  'tender/value/currency',\n  'tender/value/amount',\n  'tender/procuringEntity/name',\n  'tender/procurementMethodDetails',\n  'tender/mainProcurementCategory',\n  'tender/tenderPeriod/startDate',\n  'tender/tenderPeriod/endDate',\n  'tender/tenderPeriod/durationInDays',\n  'tender/enquiryPeriod/startDate',\n  'tender/enquiryPeriod/endDate',\n  'tender/enquiryPeriod/durationInDays',\n  'tender/documents/0/url',\n]\nconst MS_CONFIG = {\n  fields: ['content'],\n  storeFields: COLS.concat(['compressed']),\n}\n\nconst range = function(from: number, to: number) {\n    const arr = []\n    for(let i = from; i <= to; i++) arr.push(i)\n    return arr\n};\n\nconst DataLoader : React.FunctionComponent<DataLoaderProps> = () => {\n  const [minisearches, setMinisearches] = useState<MiniSearch[]>([])\n  const [progress, setProgress] = useState<number>()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (loading) return;\n    setLoading(true);\n\n    (async () => {\n      const totalRequestsSize = range(0, NUM_MINISEARCH).map(() => 0)\n      const requestsTransferredSize = range(0, NUM_MINISEARCH).map(() => 0)\n      const updateProgress = () => {\n        if (totalRequestsSize.some((x) => x === 0)) return\n        setProgress(\n          requestsTransferredSize.reduce((a, b) => a + b, 0) /\n          totalRequestsSize.reduce((a, b) => a + b, 0)\n        )\n      }\n      setMinisearches(await Promise.all(range(0, NUM_MINISEARCH)\n        // TODO: save to localStorage\n        .map((i) => {\n          let headers = new Headers();\n          // appending range header to get number of bytes\n          // since chunked transfer encoding does not return content length\n          headers.append(\"Range\", \"bytes=0-\" + (100 * 1024 * 1024));\n          let request = new Request(`/data/index${i}.json`, {headers});\n          return fetch(request)\n            .then((r) => {\n              const range = r.headers.get('content-range')\n              let reqSize = 0;\n              if (range && range.includes('/')) {\n                reqSize = parseInt(range.split('/')[1])\n                totalRequestsSize[i] = reqSize\n                updateProgress()\n              }\n              return fetchProgress({\n                onProgress(progress) {\n                  requestsTransferredSize[i] = progress.transferred\n                  updateProgress()\n                },\n                onError(err) {\n                  // TODO: handle error\n                  console.error(err);\n                },\n              })(r)\n            })\n            .then((res) => res.blob())\n            .then(async (blob) => {\n              requestsTransferredSize[i] = blob.size\n              updateProgress()\n              return MiniSearch.loadJSON(await blob.text(), MS_CONFIG)\n            })\n            // TODO: handle error\n          })\n        )\n      )\n    })()\n  }, [loading])\n\n  return (\n    <>\n      {minisearches.length === 0 ? <Loading progress={progress} /> : <SearchBox minisearches={minisearches} />}\n    </>\n  )\n}\n\nexport default DataLoader\n","import React, { useState } from 'react';\n\nimport DataLoader from './DataLoader'\n\nfunction App() {\n  const [ready, setReady] = useState(false)\n  return (\n    <>\n      {!ready && <button onClick={() => setReady(true)}>Listo para descargar muchos megas de datos</button>}\n      {ready && <DataLoader />}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}